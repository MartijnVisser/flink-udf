name: Build and Deploy Flink UDF

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: flink-udf-jar
        path: target/flink-udf-1.0.0.jar
        retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: flink-udf-jar
        path: target/
        
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        
    - name: Terraform Format Check
      run: terraform fmt -check -recursive terraform/
      
    - name: Terraform Init
      run: terraform init
      working-directory: terraform/
      
    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform/
      
        - name: Create Terraform variables file
          run: |
            cat > terraform.tfvars << EOF
            cloud_provider = "${{ vars.CLOUD_PROVIDER || 'aws' }}"
            region = "${{ vars.REGION || 'eu-west-1' }}"
            artifact_version = "${{ vars.ARTIFACT_VERSION || '1.0.0' }}"
            current_catalog = "${{ vars.CURRENT_CATALOG || 'mvisser' }}"
            current_database = "${{ vars.CURRENT_DATABASE || 'standard_cluster' }}"
            flink_rest_endpoint = "${{ vars.FLINK_REST_ENDPOINT || '' }}"
            organization_id = "${{ vars.ORGANIZATION_ID }}"
            environment_id = "${{ vars.ENVIRONMENT_ID }}"
            compute_pool_id = "${{ vars.COMPUTE_POOL_ID }}"
            confluent_cloud_api_key = "${{ secrets.CONFLUENT_CLOUD_API_KEY }}"
            confluent_cloud_api_secret = "${{ secrets.CONFLUENT_CLOUD_API_SECRET }}"
            flink_api_key = "${{ secrets.FLINK_API_KEY }}"
            flink_api_secret = "${{ secrets.FLINK_API_SECRET }}"
            artifact_api_key = "${{ secrets.ARTIFACT_API_KEY }}"
            artifact_api_secret = "${{ secrets.ARTIFACT_API_SECRET }}"
            EOF
          working-directory: terraform/
      
    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/
      
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/
      
    - name: Output deployment results
      run: |
        echo "Deployment completed successfully!"
        echo "Artifact ID: $(terraform output -raw artifact_id)"
        echo "Function Statement ID: $(terraform output -raw function_statement_id)"
        echo "Demo Statement ID: $(terraform output -raw demo_statement_id)"
        echo ""
        echo "âœ… UDF artifact uploaded and SQL statements created!"
        echo "The CustomTax function is now available for use in Flink SQL."
      working-directory: terraform/

  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: mvn test
